{
  "hash": "eb251071627b7a997a0d9d5fbfcd3979",
  "result": {
    "markdown": "---\ntitle: \"Petróleo\"\nauthor: \"Jorge Luiz Mendes\"\ndate: \"2022-07-04\"\ncategories: [analysis,new,code,ANP]\nimage: \"image1.png\"\ndescription: \"Panorama a respeito do petróleo e biblioteca ggplot\"\n---\n\n\n------------------------------------------------------------------------\n\nAtualizado[^1] : 23/03/2023\n\n[^1]: Troquei a paleta de cores e utilizei o pacote de glue para melhorar a vizualização.\n\n------------------------------------------------------------------------\n\n# Introdução\n\nO petróleo é um recurso extremamente necessário, presente em diversos setores da economia (indústria, agricultura, combustíveis, e etc).\n\n![](image1.png){fig-align=\"center\" width=\"188\"}\n\n\\[Link do Ícone\\](<a href=\"https://www.flaticon.com/br/icones-gratis/barril-de-oleo\" title=\"barril de óleo ícones\">Barril de óleo ícones criados por mangsaabguru - Flaticon</a>)\n\n# Objetivo\n\nAnalisar a produção de petróleo no Brasil. Para essa tarefa foram coletados dados da [Agência Nacional do Petróleo](https://www.gov.br/anp/pt-br) (ANP). A proposta é gerar diversos tipos de visualização com a biblioteca ggplot.\n\n## Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gghighlight)\nlibrary(magrittr)\nlibrary(plyr)\nlibrary(knitr)\nlibrary(geobr)\nlibrary(glue)\n```\n:::\n\n\n::: callout-note\n## E para que servem essas bibliotecas?\n\nO [Tidyverse](https://www.tidyverse.org) é um conjunto de bibliotecas muito útil que pode ser carregada rapidamente.\n\n![](https://oliviergimenez.github.io/intro_tidyverse/assets/img/01_tidyverse_data_science.png){fig-alt=\"https://oliviergimenez.github.io/intro_tidyverse\" fig-align=\"center\" width=\"483\"}\n\n-   readr: Importar/Carregar dados;\n\n-   dplyr(tidyr, tibble, plyr): Manipulação e transformação de dados;\n\n-   ggplot: Visualização de dados;\n\n-   magrittr: Operador Pipe(\"O velho %\\>%\") facilita a escrita do código. Também existe o novo pipe (\"\\|\\>\") nativo nas versões atuais do RStudio;\n\n-   knitr: Ajuda a formatar tabelas.\n:::\n\n## Visão Geral\n\nQuais países possuem as maiores reservas de petróleo?\n\nCarregando os dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nReserva_internacional <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-1-panorama-internacional/dados-abertos-csv/anuario-2021-dados_abertos-tabela1-1.csv\")\n```\n:::\n\n\nPlotando o Gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nReserva_internacional %>% filter(ANO ==2020) %>% \n  arrange(desc(`VALOR DA RESERVA`)) %>% slice(1:10) %>% \n    ggplot() +\n    geom_col(aes(x =`VALOR DA RESERVA`,y =reorder(PAÍS,`VALOR DA RESERVA`),\n            fill = BLOCO) ) +\n          scale_fill_manual(values = c(\"#de6d04\",\"#0f7a38\")) +\n          labs(x =\"Bilhões de Barris\", y = \"\",\n               title =\"As 10 Maiores Reservas de Petróleo\",\n               subtitle =\"em 2020\" ,\n               caption = \"Mendes,Jorge L.\") +\n  \n         \n    theme(plot.title = element_text(face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](Petroleum_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nA OPEP (Organização dos Países Exportadores de Petróleo) é uma organização que tem por objetivo regular a produção do petróleo para dar estabilidade no mercado internacionall.\n\nQuem são maiores produtores?\n\nCarregando os dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nProducao_internacional <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-1-panorama-internacional/dados-abertos-csv/anuario-2021-dados_abertos-tabela1-2.csv\")\n\nProducao_internacional$PRODUÇÃO <- round(Producao_internacional$PRODUÇÃO,2)\n```\n:::\n\n\nPlotando o Gráfico adicionando labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n Producao_internacional %>% filter(ANO == 2020) %>% \n  arrange(desc(PRODUÇÃO)) %>% \n   slice(1:10) %>% \n   mutate(label = glue::glue(\"{round(PRODUÇÃO/1000,2)}k\")) %>%  \n  ggplot() +\n   aes(x =PRODUÇÃO ,y =reorder(PAÍS,PRODUÇÃO),\n                fill=BLOCO, label =label) +\n   geom_col() +\n        scale_fill_manual(values = c(\"#de6d04\",\"#0f7a38\")) +\n         labs(x =\"Milhares de Barris por Dia\", y = \"\",\n              title = \"Os 10 Maiores Produtores de Petróleo\",\n              subtitle =\"em 2020\",\n              caption = \"Mendes,Jorge L.\") +\n        geom_label(size = 3) +\n    scale_x_continuous(limits = c(0,17000),\n                       labels = function(x){\n                       glue::glue(\"{x/1000}k\")}) +\n   \n    theme(plot.title = element_text(face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](Petroleum_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nEmbora o Brasil não tenha as maiores reservas de petróleo, ele pertence ao grupo dos maiores produtores.\n\nAgora podemos analizar a produção anual de petróleo do Brasil.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Texto com quebra de linha\nTexto <- paste(\n  strwrap(\"Aumento da extração de petróleo do Pré-Sal no ano de 2015\",\n          20),\n  collapse = \"\\n\")\n\nano_destacado <- Producao_internacional %>% \n  filter(ANO == 2015,PAÍS == \"Brasil\") %>%\n  mutate(label = glue::glue(\"{PRODUÇÃO}\"))\n\n\nProducao_internacional %>% filter(PAÍS ==\"Brasil\") %>% \n  ggplot() +\n   aes(x = ANO,y=round(PRODUÇÃO,2)) +\n \n  geom_line(size =1.2,colour = \"grey\" ) +\n    scale_x_continuous(\n      breaks =c(2011:2020)) +\n  labs(y = \"Milhares de Barris por dia\",x =\"Ano\",\n       title = \"\",\n       subtitle = \"\",\n       caption = \"Mendes, Jorge L.\") +\n  \n  geom_point(size = 3, \n             colour = \"grey\") +\n  \n  \n  \n  #Textos\n  annotate(\"text\",x = 2012 ,y =3000,size = 6,\n           label = \"BRASIL\", fontface = \"bold\",colour = \"#36674e\") +\n  annotate(\"text\",x = 2016 ,y =2300,size= 4,\n           label = Texto, fontface = \"bold\",colour = \"#243bd4\") +\n   \n  #destacar um ponto\n  ggrepel::geom_text_repel(\n    data = ano_destacado,\n    aes(x =ANO,y = PRODUÇÃO,label =label),\n    nudge_x = -0.5,\n    nudge_y = 50,\n    color = \"#243bd4\",\n    size = 5,\n    arrow = NULL\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](Petroleum_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nQuem foram os maiores consumidores em 2020?\n\nCarregando os dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconsumo_internacional <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-1-panorama-internacional/dados-abertos-csv/anuario-2021-dados_abertos-tabela1-3.csv\")\n```\n:::\n\n\nUsando o pacote knitr para formatar tabelas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconsumo_internacional %>% \n  filter(ANO ==2020) %>% select(2:3) %>%  \n  arrange(desc(`CONSUMO DE PETRÓLEO`)) %>% slice(1:10) %>% \n  head(10) %>% \n  knitr::kable(col.names = c(\"País\",\"Consumo de Petróleo (mil barris por dia)\"))\n```\n\n::: {.cell-output-display}\n|País           | Consumo de Petróleo (mil barris por dia)|\n|:--------------|----------------------------------------:|\n|Estados Unidos |                                    17178|\n|China          |                                    14225|\n|Índia          |                                     4669|\n|Arábia Saudita |                                     3544|\n|Japão          |                                     3268|\n|Rússia         |                                     3238|\n|Coreia do Sul  |                                     2560|\n|Brasil         |                                     2323|\n|Canadá         |                                     2282|\n|Alemanha       |                                     2045|\n:::\n:::\n\n\nE no Brasil? Quais estados tem reserva de petróleo?\n\nCarregando dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBr_Reservas <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-2-industria-nacional-do-petroleo-e-do-gas-natural/dados-abertos-csv/anuario-2021-dados_abertos-tabela2-3.csv\")\n```\n:::\n\n\nAqui iremos somar as reservas marítimas e terrestres.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Vamos agrupar total das reservas(terra e mar)\nTotal_estados <- Br_Reservas %>% filter(ANO == 2020) %>% \n  group_by(`UNIDADES DA FEDERAÇÃO`) %>% \n  dplyr::summarise(\n    sum(\n      Total =`RESERVAS TOTAIS DE PETRÓLEO (EM MILHÕES DE BARRIS)`),\n      Count= n()\n    ) %>% \n  #renomeando as colunas\n  plyr::rename(replace =c(\"sum(Total = `RESERVAS TOTAIS DE PETRÓLEO (EM MILHÕES DE BARRIS)`)\"=\"Total\",\"UNIDADES DA FEDERAÇÃO\" = \"name_state\"))\n #Renomeando alguns itens\nTotal_estados$name_state[Total_estados$name_state ==\"Paraná5\"] <- \"Paraná\"\nTotal_estados$name_state[Total_estados$name_state ==\"Rio de Janeiro3\"] <- \"Rio De Janeiro\"\nTotal_estados$name_state[Total_estados$name_state ==\"Santa Catarina6\"] <- \"Santa Catarina\"\nTotal_estados$name_state[Total_estados$name_state ==\"São Paulo4\"] <- \"São Paulo\"\nTotal_estados$name_state[Total_estados$name_state ==\"Rio Grande do Norte\"] <- \"Rio Grande Do Norte\"\n#Formatando a tabela\nTotal <-Total_estados %>% \n  select(1:2) %>% kable(col.names = c(\"UF\",\"Total\"))\n\nTotal\n```\n\n::: {.cell-output-display}\n|UF                  |        Total|\n|:-------------------|------------:|\n|Alagoas             | 4.040435e+00|\n|Amazonas            | 5.153600e+01|\n|Bahia               | 2.938644e+02|\n|Ceará               | 2.428873e-01|\n|Espírito Santo      | 1.314880e+03|\n|Maranhão            | 2.139806e-01|\n|Paraná              | 0.000000e+00|\n|Rio Grande Do Norte | 2.662763e+02|\n|Rio De Janeiro      | 1.603287e+04|\n|Santa Catarina      | 0.000000e+00|\n|Sergipe             | 1.947730e+02|\n|São Paulo           | 2.079593e+03|\n:::\n:::\n\n\nPodemos apresentar os resultado na forma de mapa\n\nA biblioteca geobr nos force uma malha de pontos que podemos usar para construir mapas.\n\nCarregando os dados de 2017.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMapa <-geobr::read_state(year = 2017)\n```\n:::\n\n\nAgora podemos unir as tabelas\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# um pequeno malabarismo para plotar o mapa completo\nv1 <-c(\"Rio Grande Do Sul\",\"Minas Gerais\",\"Mato Grosso Do Sul\",\n       \"Mato Grosso\",\"Goiás\",\"Distrito Federal\",\"Piauí\",\"Paraíba\",\n       \"Pernambuco\",\"Rondônia\",\"Acre\",\"Roraima\",\"Pará\",\"Amapá\",\n       \"Tocantins\")\nv2 <-rep(0,15)\n# selecionar as colunas de interesse\nTotal_estados <- Total_estados %>% select(1:2)\n\n#adicionando linhas ao dataframe\nlinhas <-data.frame(name_state =v1,Total = v2)\n\nTotal_estados <- rbind(Total_estados,linhas)\n\n#Finalmente unindo as tabelas \nEstados <- merge(Mapa, Total_estados, by = c(\"name_state\"))\n```\n:::\n\n\nPlotando o Gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  Estados %>% ggplot() +\n    geom_sf(aes(fill=Total), color= \"black\", size=.15) +\n      labs(subtitle=\"Reservas Totais Estimadas em 2020\", size=8) +\n      scale_fill_distiller(palette = \"Oranges\",direction=1, \n                           name=\"Milhões de Barris\")\n```\n\n::: {.cell-output-display}\n![](Petroleum_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n# Conclusão\n\nA biblioteca ggplot é poderosa. Ela permite fazer vários tipos de edição no gráfico, gerando diversas visualizações com muita facilidade.\n\n# Referências\n\n-   [Curso R](https://livro.curso-r.com)\n\n-   [Beatriz Milz](https://beamilz.com)\n\n-   [Olivier Gimenez](https://oliviergimenez.github.io/intro_tidyverse/#1)\n",
    "supporting": [
      "Petroleum_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
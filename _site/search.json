[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jorge Mendes",
    "section": "",
    "text": "analysis\n\n\nnew\n\n\ncode\n\n\nfutebol\n\n\n\n\nAnalisando os resultados do campeonato brasileiro\n\n\n\n\n\n\nJul 14, 2022\n\n\nJorge Luiz Mendes\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nanalysis\n\n\nnew\n\n\ncode\n\n\nANP\n\n\n\n\nPanorama a respeito do petróleo e biblioteca ggplot\n\n\n\n\n\n\nJul 4, 2022\n\n\nJorge Luiz Mendes\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Petroleum/Petroleum.html",
    "href": "posts/Petroleum/Petroleum.html",
    "title": "Petróleo",
    "section": "",
    "text": "O petróleo é um recurso extremamente necessário, presente em diversos setores da economia (indústria, agricultura, combustíveis, e etc).\n\n\n\n\n\n[Link do Ícone](Barril de óleo ícones criados por mangsaabguru - Flaticon)"
  },
  {
    "objectID": "posts/Petroleum/Petroleum.html#bibliotecas",
    "href": "posts/Petroleum/Petroleum.html#bibliotecas",
    "title": "Petróleo",
    "section": "Bibliotecas",
    "text": "Bibliotecas\n\nlibrary(tidyverse)\nlibrary(gghighlight)\nlibrary(magrittr)\nlibrary(plyr)\nlibrary(knitr)\nlibrary(geobr)\n\n\n\n\n\n\n\nE para que servem essas bibliotecas?\n\n\n\nO Tidyverse é um conjunto de bibliotecas muito útil que pode ser carregada rapidamente.\n\n\n\n\n\n\nreadr: Importar/Carregar dados;\ndplyr(tidyr, tibble, plyr): Manipulação e transformação de dados;\nggplot: Visualização de dados;\nmagrittr: Operador Pipe(“O velho %>%”) facilita a escrita do código. Também existe o novo pipe (“|>”) nativo nas versões atuais do RStudio;\nknitr: Ajuda a formatar tabelas."
  },
  {
    "objectID": "posts/Petroleum/Petroleum.html#visão-geral",
    "href": "posts/Petroleum/Petroleum.html#visão-geral",
    "title": "Petróleo",
    "section": "Visão Geral",
    "text": "Visão Geral\nQuais países possuem as maiores reservas de petróleo?\nCarregando os dados.\n\nReserva_internacional <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-1-panorama-internacional/dados-abertos-csv/anuario-2021-dados_abertos-tabela1-1.csv\")\n\nPlotando o Gráfico.\n\nReserva_internacional %>% filter(ANO ==2020) %>% \n  arrange(desc(`VALOR DA RESERVA`)) %>% slice(1:10) %>% \n    ggplot() +\n        aes(x =`VALOR DA RESERVA`,y =reorder(PAÍS,`VALOR DA RESERVA`),\n            fill = BLOCO,label =`VALOR DA RESERVA` ) +\n    geom_col() +\n          scale_fill_manual(values = c(\"orange\",\"seagreen3\")) +\n          labs(x =\"Bilhões de Barris\", y = \"\") +\n          \n          ggtitle(\"As 10 Maiores Reservas de Petróleo em 2020\") +\n          geom_label(size =3)\n\n\n\n\nA OPEP (Organização dos Países Exportadores de Petróleo) é uma organização que tem por objetivo regular a produção do petróleo para dar estabilidade no mercado internacionall.\nQuem são maiores produtores?\nCarregando os dados.\n\nProducao_internacional <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-1-panorama-internacional/dados-abertos-csv/anuario-2021-dados_abertos-tabela1-2.csv\")\n\nPlotando o Gráfico.\n\n Producao_internacional %>% filter(ANO == 2020) %>% \n  arrange(desc(PRODUÇÃO)) %>% slice(1:10) %>%   \n  ggplot() +\n      aes(x =PRODUÇÃO ,y =reorder(PAÍS,PRODUÇÃO),fill=BLOCO, label = PRODUÇÃO) +\n        \n      geom_col() +\n           scale_fill_manual(values = c(\"orange\",\"seagreen3\")) +\n          labs(x =\"Milhares de Barris por Dia\", y = \"\") +\n          \n          ggtitle(\"Os 10 Maiores Produtores de Petróleo em 2020\") +\n          geom_label(size = 3)\n\n\n\n\nEmbora o Brasil não tenha as maiores reservas de petróleo, ele pertence ao grupo dos maiores produtores.\nAgora podemos analizar a produção anual de petróleo do Brasil.\n\n#Texto com quebra de linha\nTexto <- paste(\n  strwrap(\"Aumento da extração de petróleo do Pré-Sal no ano de 2015\",\n          20),\n  collapse = \"\\n\")\n\nProducao_internacional %>% filter(PAÍS ==\"Brasil\") %>% \n  ggplot() +\n   aes(x = ANO,y=PRODUÇÃO) +\n \n  geom_line(size =1.2,colour = \"grey\" ) +\n    scale_x_continuous(\n      breaks =c(2011,2012,2013,2014,2015,2016,2017,2018,2019,2020)) +\n  labs(y = \"Milhares de Barris por dia\") +\n  \n  geom_point(size = 3, colour = \"black\") +\n  \n  #Textos\n  annotate(\"text\",x = 2012 ,y =2800,size = 6,\n           label = \"BRASIL\", fontface = \"bold\",colour = \"green\") +\n  annotate(\"text\",x = 2018 ,y =2300,size = 5,\n           label = Texto, fontface = \"bold\",colour = \"red\") +\n   \n  #destacar um ponto\n  gghighlight(\n    ANO ==2015,\n    label_key = PRODUÇÃO,\n    #unhighlighted_colour = \"grey\",\n    label_params = list(size = 3.5,\n                        face = \"bold\",\n                        fill = \"red\"))\n\nWarning: Could not calculate the predicate for layer 3, layer 4; ignored\n\n\nWarning: Ignoring unknown parameters: face\n\n\n\n\n\nQuem foram os maiores consumidores em 2020?\nCarregando os dados.\n\nconsumo_internacional <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-1-panorama-internacional/dados-abertos-csv/anuario-2021-dados_abertos-tabela1-3.csv\")\n\nUsando o pacote knitr para formatar tabelas.\n\nconsumo_internacional %>% \n  filter(ANO ==2020) %>% select(2:3) %>%  \n  arrange(desc(`CONSUMO DE PETRÓLEO`)) %>% slice(1:10) %>% \n  head(10) %>% \n  knitr::kable(col.names = c(\"País\",\"Consumo de Petróleo (mil barris por dia)\"))\n\n\n\n\nPaís\nConsumo de Petróleo (mil barris por dia)\n\n\n\n\nEstados Unidos\n17178\n\n\nChina\n14225\n\n\nÍndia\n4669\n\n\nArábia Saudita\n3544\n\n\nJapão\n3268\n\n\nRússia\n3238\n\n\nCoreia do Sul\n2560\n\n\nBrasil\n2323\n\n\nCanadá\n2282\n\n\nAlemanha\n2045\n\n\n\n\n\nE no Brasil? Quais estados tem reserva de petróleo?\nCarregando dados\n\nBr_Reservas <- readr::read_csv2(\"https://www.gov.br/anp/pt-br/centrais-de-conteudo/publicacoes/anuario-estatistico/arquivos-anuario-estatistico-2021-metadados-pdf-e-dados-abertos-csv/secao-2-industria-nacional-do-petroleo-e-do-gas-natural/dados-abertos-csv/anuario-2021-dados_abertos-tabela2-3.csv\")\n\nAqui iremos somar as reservas marítimas e terrestres.\n\n#Vamos agrupar total das reservas(terra e mar)\nTotal_estados <- Br_Reservas %>% filter(ANO == 2020) %>% \n  group_by(`UNIDADES DA FEDERAÇÃO`) %>% \n  dplyr::summarise(\n    sum(\n      Total =`RESERVAS TOTAIS DE PETRÓLEO (EM MILHÕES DE BARRIS)`),\n      Count= n()\n    ) %>% \n  #renomeando as colunas\n  plyr::rename(replace =c(\"sum(Total = `RESERVAS TOTAIS DE PETRÓLEO (EM MILHÕES DE BARRIS)`)\"=\"Total\",\"UNIDADES DA FEDERAÇÃO\" = \"name_state\"))\n #Renomeando alguns itens\nTotal_estados$name_state[Total_estados$name_state ==\"Paraná5\"] <- \"Paraná\"\nTotal_estados$name_state[Total_estados$name_state ==\"Rio de Janeiro3\"] <- \"Rio De Janeiro\"\nTotal_estados$name_state[Total_estados$name_state ==\"Santa Catarina6\"] <- \"Santa Catarina\"\nTotal_estados$name_state[Total_estados$name_state ==\"São Paulo4\"] <- \"São Paulo\"\nTotal_estados$name_state[Total_estados$name_state ==\"Rio Grande do Norte\"] <- \"Rio Grande Do Norte\"\n#Formatando a tabela\nTotal <-Total_estados %>% \n  select(1:2) %>% kable(col.names = c(\"UF\",\"Total\"))\n\nTotal\n\n\n\n\nUF\nTotal\n\n\n\n\nAlagoas\n4.040435e+00\n\n\nAmazonas\n5.153600e+01\n\n\nBahia\n2.938644e+02\n\n\nCeará\n2.428873e-01\n\n\nEspírito Santo\n1.314880e+03\n\n\nMaranhão\n2.139806e-01\n\n\nParaná\n0.000000e+00\n\n\nRio De Janeiro\n1.603287e+04\n\n\nRio Grande Do Norte\n2.662763e+02\n\n\nSanta Catarina\n0.000000e+00\n\n\nSão Paulo\n2.079593e+03\n\n\nSergipe\n1.947730e+02\n\n\n\n\n\nPodemos apresentar os resultado na forma de mapa\nA biblioteca geobr nos force uma malha de pontos que podemos usar para construir mapas.\nCarregando os dados de 2017.\n\nMapa <-geobr::read_state(year = 2017)\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |======================================================================| 100%\n\n\nAgora podemos unir as tabelas\n\n# um pequeno malabarismo para plotar o mapa completo\nv1 <-c(\"Rio Grande Do Sul\",\"Minas Gerais\",\"Mato Grosso Do Sul\",\n       \"Mato Grosso\",\"Goiás\",\"Distrito Federal\",\"Piauí\",\"Paraíba\",\n       \"Pernambuco\",\"Rondônia\",\"Acre\",\"Roraima\",\"Pará\",\"Amapá\",\n       \"Tocantins\")\nv2 <-rep(0,15)\n# selecionar as colunas de interesse\nTotal_estados <- Total_estados %>% select(1:2)\n\n#adicionando linhas ao dataframe\nlinhas <-data.frame(name_state =v1,Total = v2)\n\nTotal_estados <- rbind(Total_estados,linhas)\n\n#Finalmente unindo as tabelas \nEstados <- merge(Mapa, Total_estados, by = c(\"name_state\"))\n\nPlotando o Gráfico.\n\n  Estados %>% ggplot() +\n    geom_sf(aes(fill=Total), color= \"black\", size=.15) +\n      labs(subtitle=\"Reservas Totais Estimadas em 2020\", size=8) +\n      scale_fill_distiller(palette = \"Oranges\",direction=1, \n                           name=\"Milhões de Barris\") +\n      theme_minimal()"
  },
  {
    "objectID": "posts/Campeonato Brasileiro/Br.html",
    "href": "posts/Campeonato Brasileiro/Br.html",
    "title": "Campeonato Brasileiro",
    "section": "",
    "text": "This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "posts/Campeonato Brasileiro/Br.html#pay-attention",
    "href": "posts/Campeonato Brasileiro/Br.html#pay-attention",
    "title": "Campeonato Brasileiro",
    "section": "Pay Attention",
    "text": "Pay Attention\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention.\n:::\n```"
  },
  {
    "objectID": "posts/Campeonato Brasileiro/Br.html#including-plots",
    "href": "posts/Campeonato Brasileiro/Br.html#including-plots",
    "title": "Campeonato Brasileiro",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "posts/Campeonato Brasileiro/Campeonato Brasileiro.html",
    "href": "posts/Campeonato Brasileiro/Campeonato Brasileiro.html",
    "title": "Campeonato Brasileiro",
    "section": "",
    "text": "Explorar a biblioteca brasileirão. É uma boa base para praticar, principalmente, manipulações de dataframe.\nEla consegue, além de outras coisas, retornar jogos, a data, o placar e os clubes envolvidos desde 2003 no campeonato brasileiro de futebol.\n\n\n\n\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(plyr)\nlibrary(lubridate)\nlibrary(calendR)\nlibrary(brasileirao)\nlibrary(knitr)\nlibrary(treemap)\nlibrary(gghighlight)\nlibrary(jpeg)\nlibrary(patchwork)\n\n\n\n\nCarregando dados.\n\nBr <- brasileirao::matches\n\n\nknitr::kable(head(Br))\n\n\n\n\nseason\ndate\nhome\nscore\naway\n\n\n\n\n2003\n2003-03-29\nAthletico PR\n2x0\nGrêmio\n\n\n2003\n2003-03-29\nGuarani\n4x2\nVasco\n\n\n2003\n2003-03-30\nCorinthians\n0x3\nAtlético MG\n\n\n2003\n2003-03-30\nGoiás\n2x2\nPaysandu\n\n\n2003\n2003-03-30\nCriciúma\n2x0\nFluminense\n\n\n2003\n2003-03-30\nCruzeiro\n2x2\nSão Caetano\n\n\n\n\n\nVerificando os tipos de variáveis das colunas.\n\nglimpse(Br)\n\nRows: 8,026\nColumns: 5\n$ season <dbl> 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 200~\n$ date   <date> 2003-03-29, 2003-03-29, 2003-03-30, 2003-03-30, 2003-03-30, 20~\n$ home   <chr> \"Athletico PR\", \"Guarani\", \"Corinthians\", \"Goiás\", \"Criciúma\", ~\n$ score  <chr> \"2x0\", \"4x2\", \"0x3\", \"2x2\", \"2x0\", \"2x2\", \"1x1\", \"0x0\", \"1x1\", ~\n$ away   <chr> \"Grêmio\", \"Vasco\", \"Atlético MG\", \"Paysandu\", \"Fluminense\", \"Sã~\n\n\nRealizando algumas manipulações para obter resultados dos jogos a partir de 2010.\n\nTabela_extendida <- Br  %>% filter(season >=2010)  %>% \n  separate(score,\n           c(\"Placar_Mandante\",\"Placar_Visitante\"),\n           sep = \"x\",\n           convert = TRUE\n    \n  ) %>% \n  mutate(\n    Mandante = case_when(\n      Placar_Mandante > Placar_Visitante~\"Venceu\",\n      Placar_Mandante < Placar_Visitante~\"Perdeu\",\n      Placar_Mandante == Placar_Visitante~\"Empate\"\n    ),\n     Visitante = case_when(\n      Placar_Mandante < Placar_Visitante~\"Venceu\",\n      Placar_Mandante > Placar_Visitante~\"Perdeu\",\n      Placar_Mandante == Placar_Visitante~\"Empate\"\n    )\n  )\n\nA ideia aqui é selecionar um clube e fazer as análises a partir dessa escolha. Vamos criar uma função para selecionar um time.\n\nClubes<-function(dataframe,Time){\n  #selcionar o clube quando ele é mandante\n  TimeMandante <-dataframe %>% filter(home==Time) %>% \n  select(season,date,home,Placar_Mandante,\n         Placar_Visitante,Mandante) %>% \n  plyr::rename(\n    replace = c(\"home\"=\"clube\",\n                \"Placar_Mandante\"=\"Gols_Pro\",\n                \"Placar_Visitante\"=\"Gols_Contra\",\n                \"Mandante\"=\"Resultado\"))\n  \n  #selcionar o clube quando ele é visitante\n  TimeVisitante <- dataframe %>% \n  filter(away==Time) %>% \n  select(season,date,away,Placar_Visitante,\n         Placar_Mandante,Visitante) %>% \n  plyr::rename(\n    replace = c(\"away\"=\"clube\",\n                \"Placar_Visitante\"=\"Gols_Pro\",\n                \"Placar_Mandante\"=\"Gols_Contra\",\n                \"Visitante\"=\"Resultado\")) \n  \n  #Unindo as tabelas\n  Resultados <-rbind(TimeMandante,TimeVisitante)\n  \n  return(Resultados)\n  \n}\n\nSelecionando um time.\nO interessante é selecionar um clube que jogou muitas edições para ter uma boa quantidade de dados. Convenientemente foi selcionado o Corinthians.\n\n\n\n\n\n\nTimao<-Clubes(dataframe= Tabela_extendida,Time =\"Corinthians\")\n\nÉ interessante adicionar os pontos obtidos em cada partida.\n\nTimao <- Timao %>% mutate(\n  Pontos = case_when(\n  Resultado ==\"Venceu\"~3,\n  Resultado ==\"Empate\"~1,\n  Resultado ==\"Perdeu\"~0,\n))\n\nUsando o pacote lubridate para tratar datas, obtendo informações sobre o dia,dia da semana, mês e ano de forma isolada.\n\nTimao$dia_Mes <- lubridate::day(Timao$date)\nTimao$Mes <- lubridate::month(Timao$date)\nTimao$NdiaSemana <- lubridate::wday(Timao$date)\n\nTimao <-Timao %>% mutate(\n\n  dia_semana = case_when(\n\n    NdiaSemana == 1 ~\"Domingo\",\n\n    NdiaSemana == 2 ~\"Segunda-Feira\",\n\n    NdiaSemana == 3 ~\"Terça-Feira\",\n\n    NdiaSemana == 4 ~\"Quarta-Feira\",\n\n    NdiaSemana == 5 ~\"Quinta-Feira\",\n\n    NdiaSemana == 6 ~\"Sexta-Feira\",\n\n    NdiaSemana == 7 ~\"Sábado\"\n\n    \n\n  )\n\n)\n\nQual o número de vitórias, empates e derrotas da última década?\n\nTimao %>% na.omit() %>% count(\"Resultado\") %>% \n  treemap(index = c(\"freq\",\"Resultado\"),\n          vSize = \"freq\",\n          align.labels=list(c(\"center\", \"center\"),c(\"center\", \"top\")),\n          title = \"Resultados do Corinthians desde 2010\",\n          fontsize.labels=c(15,12),\n          palette = c(\"#cfc6c6\",\"#3d3a3a\",\"#0a0a0a\")\n           \n           )\n\n\n\n\nQual a pontuação das últimas temporadas?\n\npontuacao <-Timao %>% na.omit() %>% group_by(season) %>% \n  dplyr::summarise(\n    sum(Total =Pontos)) %>% \n  plyr::rename(\n    replace = c(\"sum(Total = Pontos)\"=\"Pontuação\")) \n\n#Gambiarra para plotar os anos em que foi campeão\npontuacao <- pontuacao %>% mutate(Titulo = case_when(\n  season ==2011 ~\"Campeão\",\n  season ==2015 ~\"Campeão\",\n  season ==2017 ~\"Campeão\",\n  TRUE ~\" \"\n  \n))\n\n\nTexto <- paste(\n  strwrap(\"A temporada de 2022 ainda não foi concluída\",\n          20),\n  collapse = \"\\n\")\n\npath <-\"escudo1.jpg\"\nimg <- readJPEG(path,native = TRUE)\n\np1 <- pontuacao%>% \n  ggplot(aes(x =season,y =Pontuação))+ \n  ggtitle(\"Desempenho do Clube\") +\n  labs(x =\"Temporada\")   \n  \np1 + geom_line(size =1.2,colour= \"grey\") +\n    scale_x_continuous(\n      breaks =c(2010,2011,2012,2013,2014,2015,\n                2016,2017,2018,2019,2020,2021,2022)) +  \n  geom_point(size = 2,color=\"grey\") +\n  geom_point(\n    aes(x = season,y=Pontuação,color=Titulo)) +\n  \n  theme(\n    axis.text.x = element_text(angle = 90),legend.position = \"none\") +\nscale_color_manual(values=c(\"#999999\", \"#050101\")) +\n  annotate(\"text\",x = 2011,y =79,size = 5,\n           label = \"Campeão\", fontface = \"bold\",colour = \"black\")+\n  annotate(\"text\",x = 2019 ,y =38,size = 4,\n           label = Texto, fontface = \"bold\",colour = \"red\") +\n  inset_element(p = img,\n                left = 1.00,\n                bottom = 0.65,\n                right = 0.75,\n                top = 0.95)\n\n\n\n\n\n\n\nA biblioteca brasileirao é excelente . Foi possível extrair bastante informação. Ela fornece de forma simples os dados gerais sobre as partidas, infelizmente ela não trás informações como número de cartões, tempo de jogo sem interrupções, posse bola, e entre outras. Não é terra arrasada, pois outros dados de fontes distintas podem ser adicionados para complementar as análises.\n\n\n\n\nBlog Curso - R\nr - graph - gallery"
  }
]
---
title: "Campeonato Brasileiro"
author: "Jorge Luiz Mendes"
date: "2022-07-14"
categories: [analysis,new,code,futebol]
image: "image1.png"
description: "Analisando os resultados do campeonato brasileiro"
draft: false
toc: true
bibliography: references.bib
---

------------------------------------------------------------------------

*Atualizado em 11/09/2022*

------------------------------------------------------------------------

## Objetivo

Explorar a biblioteca [brasileirão](https://github.com/williamorim/brasileirao) [@brasileirao] . É uma boa base para praticar, principalmente, manipulações de dataframe.

Ela consegue, além de outras coisas, retornar jogos, a data, o placar e os clubes envolvidos desde 2003 no campeonato brasileiro de futebol.

## Bibliotecas

```{r, message= FALSE}
library(dplyr) #tratamento de dados
library(tidyr) #tratamento de dados

library(magrittr) #o pipe antigo
library(purrr) #programação funcional
library(lubridate) #tratar datas
library(knitr) #formatação de tabelas

library(brasileirao) #base de dados utilizados

library(ggplot2) #gráficos
library(treemap) #gráficos

library(jpeg) #adicionar imagens
library(patchwork)  #adicionar imagens
```

## **Mão na Massa**

Carregando dados.

```{r}
Br <- brasileirao::matches
```

Podemos expor os resultados na forma de tabela.

```{r}
knitr::kable(head(Br),align = "lccrr")
```

Verificando os tipos de variáveis das colunas.

```{r}
glimpse(Br)
```

Realizando algumas manipulações para obter resultados dos jogos a partir de 2010.

```{r}
Tabela_extendida <- Br  %>% filter(season >=2010)  %>% 
  separate(score,
           c("Placar_Mandante","Placar_Visitante"),
           sep = "x",
           convert = TRUE,
           remove = FALSE
    
  ) %>% 
  mutate(
    Mandante = case_when(
      Placar_Mandante > Placar_Visitante~"Venceu",
      Placar_Mandante < Placar_Visitante~"Perdeu",
      Placar_Mandante == Placar_Visitante~"Empate"
    ),
     Visitante = case_when(
      Placar_Mandante < Placar_Visitante~"Venceu",
      Placar_Mandante > Placar_Visitante~"Perdeu",
      Placar_Mandante == Placar_Visitante~"Empate"
    )
  )
```

A ideia aqui é selecionar um clube e fazer as análises a partir dessa escolha. Vamos criar uma função para selecionar um time.

```{r}
Clube<-function(dataframe,Time){
  #selecionar o clube quando ele é mandante
        TimeMandante <-dataframe %>% filter(home==Time) %>% 
            select(season,date,home,Placar_Mandante,
            Placar_Visitante,Mandante,away) %>% 
            rename(
                    "clube"="home",
                    "Gols_Pro"="Placar_Mandante",
                    "Gols_Contra"="Placar_Visitante",
                    "Resultado"="Mandante",
                    "adversario" ="away") %>% 
            mutate(mando = "Mandante")
  
  #selecionar o clube quando ele é visitante
        TimeVisitante <- dataframe %>% 
            filter(away==Time) %>% 
            select(season,date,away,Placar_Visitante,
            Placar_Mandante,Visitante,home) %>% 
            rename(
                    "clube"="away",
                    "Gols_Pro"="Placar_Visitante",
                    "Gols_Contra"="Placar_Mandante",
                    "Resultado"="Visitante",
                     "adversario"="home") %>% 
            mutate(mando = "Visitante")
  
  #Unindo as tabelas
        Resultados <-rbind(TimeMandante,TimeVisitante)
  
  return(Resultados)
  
}
```

Selecionando um time.

O interessante é selecionar um clube que jogou muitas edições para ter uma boa quantidade de dados. Convenientemente foi selecionado o Corinthians.

![](https://logodownload.org/wp-content/uploads/2016/11/corinthians-logo-0-1536x1536.png){fig-align="center" width="400"}

```{r}
Timao<-Clube(dataframe= Tabela_extendida,Time ="Corinthians")
```

É interessante adicionar os pontos obtidos em cada partida.

```{r}
Timao <- Timao %>% mutate(
  Pontos = case_when(
  Resultado =="Venceu"~3,
  Resultado =="Empate"~1,
  Resultado =="Perdeu"~0,
))
```

Usando o pacote lubridate é possível tratar datas, obtendo informações sobre o dia,dia da semana, mês e ano de forma isolada.

```{r}
#Timao$dia_Mes <- lubridate::day(Timao$date)
Timao$Mes <- lubridate::month(Timao$date, label = TRUE)
#Timao$NdiaSemana <- lubridate::wday(Timao$date)

```

Qual o número de vitórias, empates e derrotas da última década?

```{r}
Timao %>% filter(!is.na(Pontos)) %>% count(Resultado) %>%  
  treemap(index = c("n","Resultado"),
          vSize = "n",
          align.labels=list(c("center", "center"),c("center", "top")),
          title = "Resultados do Corinthians desde 2010",
          fontsize.labels=c(15,12),
          palette = c("#cfc6c6","#3d3a3a","#0a0a0a")
           
           )
```

Com a função **group_by e summarise** podemos agrupar os dados.

```{r}
DadosAgg <- Timao %>% 

  filter(!is.na(Pontos)) %>% 

  group_by(Mes)%>% 

  summarise(

    MediaPontos = round(mean(Pontos),2),
    GolsPro = sum(Gols_Pro),
    GolsContra =sum(Gols_Contra)) %>%

    arrange(desc(Mes))

DadosAgg %>% knitr::kable(col.names =
                            c("Mês","Pontos","Gols Pro","Gols Contra"))


```

Qual mês, em média, fez mais pontos?

```{r}
 DadosAgg%>% 
    
    
    ggplot(aes(x =MediaPontos ,y =Mes, label = MediaPontos)) +

    geom_col(fill = "gray")+

     
    geom_text(
            position = position_stack(vjust =1.05),
            color="#030202") +
    
    labs(x = "Pontos",y = "Mês", title = "Média de Pontos em Cada Mês",
         subtitle = "valores a partir de 2010") +
    theme(axis.text.x = element_blank(),axis.ticks.x=element_blank(),
          axis.text.y =element_text(face ="bold",
                                    colour = "#030202"))
    
```

Em quais mêses, fez e tomou ,mais gols?

```{r}
DadosAgg %>%  ggplot() +
    
    geom_col(aes(x = -GolsPro ,y =Mes), fill="#424d6b") +

     
    geom_text(aes(x = -GolsPro ,y =Mes,label =GolsPro),
            position = position_stack(vjust =0.5),
            color ="#ced2de") +
    
    geom_col(aes(x = GolsContra,y =Mes), 
              fill="#806630") +

     
    geom_text(aes(x =GolsContra ,y =Mes,label =GolsContra),
            position = position_stack(vjust =0.5),
            color="#030202") +
   annotate("text",x = -50 ,y =2,label ="Gols Pro",
            color ="#424d6b") +
   annotate("text",x = 50 ,y =2,label ="Gols Contra",
            color ="#806630") +
    
    
    labs(x = "Gols",y = "Mês", title = "Total de Gols por Mês",
         subtitle = "valores a partir de 2010") +
    theme(axis.text.x = element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y =element_text(face ="bold",
                                    colour = "#030202"))
```

Qual o desempenho das últimas temporadas?

```{r}
ano <- c(2011,2015,2017)
pontuacao <-
  Timao %>% filter(!is.na(Pontos)) %>% 
  group_by(season) %>% 
  summarise(Pontos = sum(Pontos)) %>% 
  mutate(Titulo = ifelse(season %in% ano, "Campeão", "Não Ganhou")) 

```

```{r}
Texto <- paste(
  strwrap("A temporada de 2022 ainda não foi concluída",
          20),
  collapse = "\n")

path <-"escudo1.jpg"
img <- readJPEG(path,native = TRUE)


pontuacao %>% 
  ggplot() +
    geom_line(aes(x = season, y = Pontos),size =1.4,colour ="grey") +
    scale_x_continuous(breaks = c(2010:2022)) +
    geom_point(aes(x = season, y = Pontos),size = 2,color="grey") +
    
    geom_point(
      aes(x = season,y=Pontos, color =Titulo, size= Titulo)) +
    
    scale_colour_manual(values = c("#0a0a0a","#b3a6a6")) +

    scale_size_manual(values = c(3,2)) +
    
    geom_line(aes(x = c(2010:2022),y = mean(`Pontos`)),
              linetype =2) +  
  
    labs(x ="Temporada",title = "Desempenho do Clube") +
    
    theme(axis.text.x = element_text(angle = 90)) +
    
    annotate("text",x = 2011 ,y =60,size = 2,
           label = "Média", fontface = "bold",colour = "black") +
    annotate("text",x = 2018 ,y =35,size = 4,
           label = Texto, fontface = "bold",colour = "red") +
    inset_element(p = img,
                left = 1.00,
                bottom = 0.65,
                right = 1.35,
                top = 1.15)


```

## Conclusão

A biblioteca brasileirao é excelente . Foi possível extrair bastante informação. Ela fornece de forma simples os dados gerais sobre as partidas, infelizmente ela não trás informações como número de cartões, tempo de jogo sem interrupções, posse bola, e entre outras. Não é terra arrasada, pois outros dados de fontes distintas podem ser adicionados para complementar as análises.

## Ver também

-   [r - graph - gallery](https://r-graph-gallery.com/treemap.html)

-   [Blog Curso -R](https://blog.curso-r.com/posts/2021-03-05-brasileirao-sem-torcida/)

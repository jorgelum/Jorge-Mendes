{
  "hash": "172901d218c77ec76141950ed503546d",
  "result": {
    "markdown": "---\ntitle: \"Campeonato Brasileiro\"\nauthor: \"Jorge Luiz Mendes\"\ndate: \"2022-07-14\"\ncategories: [analysis,new,code,futebol]\nimage: \"image1.png\"\ndescription: \"Analisando os resultados do campeonato brasileiro\"\ndraft: false\ntoc: true\nbibliography: references.bib\n---\n\n\n------------------------------------------------------------------------\n\n*Atualizado em 11/09/2022*\n\n------------------------------------------------------------------------\n\n## Objetivo\n\nExplorar a biblioteca [brasileirão](https://github.com/williamorim/brasileirao) [@brasileirao] . É uma boa base para praticar, principalmente, manipulações de dataframe.\n\nEla consegue, além de outras coisas, retornar jogos, a data, o placar e os clubes envolvidos desde 2003 no campeonato brasileiro de futebol.\n\n## Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr) #tratamento de dados\nlibrary(tidyr) #tratamento de dados\n\nlibrary(magrittr) #o pipe antigo\nlibrary(purrr) #programação funcional\nlibrary(lubridate) #tratar datas\nlibrary(knitr) #formatação de tabelas\n\nlibrary(brasileirao) #base de dados utilizados\n\nlibrary(ggplot2) #gráficos\nlibrary(treemap) #gráficos\n\nlibrary(jpeg) #adicionar imagens\nlibrary(patchwork)  #adicionar imagens\n```\n:::\n\n\n## **Mão na Massa**\n\nCarregando dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBr <- brasileirao::matches\n```\n:::\n\n\nPodemos expor os resultados na forma de tabela.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(Br),align = \"lccrr\")\n```\n\n::: {.cell-output-display}\n|season |    date    |     home     | score|        away|\n|:------|:----------:|:------------:|-----:|-----------:|\n|2003   | 2003-03-29 | Athletico PR |   2x0|      Grêmio|\n|2003   | 2003-03-29 |   Guarani    |   4x2|       Vasco|\n|2003   | 2003-03-30 | Corinthians  |   0x3| Atlético MG|\n|2003   | 2003-03-30 |    Goiás     |   2x2|    Paysandu|\n|2003   | 2003-03-30 |   Criciúma   |   2x0|  Fluminense|\n|2003   | 2003-03-30 |   Cruzeiro   |   2x2| São Caetano|\n:::\n:::\n\n\nVerificando os tipos de variáveis das colunas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(Br)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 8,026\nColumns: 5\n$ season <dbl> 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 200~\n$ date   <date> 2003-03-29, 2003-03-29, 2003-03-30, 2003-03-30, 2003-03-30, 20~\n$ home   <chr> \"Athletico PR\", \"Guarani\", \"Corinthians\", \"Goiás\", \"Criciúma\", ~\n$ score  <chr> \"2x0\", \"4x2\", \"0x3\", \"2x2\", \"2x0\", \"2x2\", \"1x1\", \"0x0\", \"1x1\", ~\n$ away   <chr> \"Grêmio\", \"Vasco\", \"Atlético MG\", \"Paysandu\", \"Fluminense\", \"Sã~\n```\n:::\n:::\n\n\nRealizando algumas manipulações para obter resultados dos jogos a partir de 2010.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTabela_extendida <- Br  %>% filter(season >=2010)  %>% \n  separate(score,\n           c(\"Placar_Mandante\",\"Placar_Visitante\"),\n           sep = \"x\",\n           convert = TRUE,\n           remove = FALSE\n    \n  ) %>% \n  mutate(\n    Mandante = case_when(\n      Placar_Mandante > Placar_Visitante~\"Venceu\",\n      Placar_Mandante < Placar_Visitante~\"Perdeu\",\n      Placar_Mandante == Placar_Visitante~\"Empate\"\n    ),\n     Visitante = case_when(\n      Placar_Mandante < Placar_Visitante~\"Venceu\",\n      Placar_Mandante > Placar_Visitante~\"Perdeu\",\n      Placar_Mandante == Placar_Visitante~\"Empate\"\n    )\n  )\n```\n:::\n\n\nA ideia aqui é selecionar um clube e fazer as análises a partir dessa escolha. Vamos criar uma função para selecionar um time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nClube<-function(dataframe,Time){\n  #selecionar o clube quando ele é mandante\n        TimeMandante <-dataframe %>% filter(home==Time) %>% \n            select(season,date,home,Placar_Mandante,\n            Placar_Visitante,Mandante,away) %>% \n            rename(\n                    \"clube\"=\"home\",\n                    \"Gols_Pro\"=\"Placar_Mandante\",\n                    \"Gols_Contra\"=\"Placar_Visitante\",\n                    \"Resultado\"=\"Mandante\",\n                    \"adversario\" =\"away\") %>% \n            mutate(mando = \"Mandante\")\n  \n  #selecionar o clube quando ele é visitante\n        TimeVisitante <- dataframe %>% \n            filter(away==Time) %>% \n            select(season,date,away,Placar_Visitante,\n            Placar_Mandante,Visitante,home) %>% \n            rename(\n                    \"clube\"=\"away\",\n                    \"Gols_Pro\"=\"Placar_Visitante\",\n                    \"Gols_Contra\"=\"Placar_Mandante\",\n                    \"Resultado\"=\"Visitante\",\n                     \"adversario\"=\"home\") %>% \n            mutate(mando = \"Visitante\")\n  \n  #Unindo as tabelas\n        Resultados <-rbind(TimeMandante,TimeVisitante)\n  \n  return(Resultados)\n  \n}\n```\n:::\n\n\nSelecionando um time.\n\nO interessante é selecionar um clube que jogou muitas edições para ter uma boa quantidade de dados. Convenientemente foi selecionado o Corinthians.\n\n![](https://logodownload.org/wp-content/uploads/2016/11/corinthians-logo-0-1536x1536.png){fig-align=\"center\" width=\"400\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTimao<-Clube(dataframe= Tabela_extendida,Time =\"Corinthians\")\n```\n:::\n\n\nÉ interessante adicionar os pontos obtidos em cada partida.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTimao <- Timao %>% mutate(\n  Pontos = case_when(\n  Resultado ==\"Venceu\"~3,\n  Resultado ==\"Empate\"~1,\n  Resultado ==\"Perdeu\"~0,\n))\n```\n:::\n\n\nUsando o pacote lubridate é possível tratar datas, obtendo informações sobre o dia,dia da semana, mês e ano de forma isolada.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Timao$dia_Mes <- lubridate::day(Timao$date)\nTimao$Mes <- lubridate::month(Timao$date, label = TRUE)\n#Timao$NdiaSemana <- lubridate::wday(Timao$date)\n```\n:::\n\n\nQual o número de vitórias, empates e derrotas da última década?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTimao %>% filter(!is.na(Pontos)) %>% count(Resultado) %>%  \n  treemap(index = c(\"n\",\"Resultado\"),\n          vSize = \"n\",\n          align.labels=list(c(\"center\", \"center\"),c(\"center\", \"top\")),\n          title = \"Resultados do Corinthians desde 2010\",\n          fontsize.labels=c(15,12),\n          palette = c(\"#cfc6c6\",\"#3d3a3a\",\"#0a0a0a\")\n           \n           )\n```\n\n::: {.cell-output-display}\n![](Campeonato-Brasileiro_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nCom a função **group_by e summarise** podemos agrupar os dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDadosAgg <- Timao %>% \n\n  filter(!is.na(Pontos)) %>% \n\n  group_by(Mes)%>% \n\n  summarise(\n\n    MediaPontos = round(mean(Pontos),2),\n    GolsPro = sum(Gols_Pro),\n    GolsContra =sum(Gols_Contra)) %>%\n\n    arrange(desc(Mes))\n\nDadosAgg %>% knitr::kable(col.names =\n                            c(\"Mês\",\"Pontos\",\"Gols Pro\",\"Gols Contra\"))\n```\n\n::: {.cell-output-display}\n|Mês | Pontos| Gols Pro| Gols Contra|\n|:---|------:|--------:|-----------:|\n|dez |   1.11|       16|          19|\n|nov |   1.82|       85|          58|\n|out |   1.40|       87|          80|\n|set |   1.37|       89|          77|\n|ago |   1.56|       88|          69|\n|jul |   2.00|       81|          35|\n|jun |   1.71|       62|          38|\n|mai |   1.84|       53|          32|\n|abr |   1.78|       16|           9|\n|fev |   1.00|        6|           7|\n|jan |   1.20|        9|           8|\n:::\n:::\n\n\nQual mês, em média, fez mais pontos?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n DadosAgg%>% \n    \n    \n    ggplot(aes(x =MediaPontos ,y =Mes, label = MediaPontos)) +\n\n    geom_col(fill = \"gray\")+\n\n     \n    geom_text(\n            position = position_stack(vjust =1.05),\n            color=\"#030202\") +\n    \n    labs(x = \"Pontos\",y = \"Mês\", title = \"Média de Pontos em Cada Mês\",\n         subtitle = \"valores a partir de 2010\") +\n    theme(axis.text.x = element_blank(),axis.ticks.x=element_blank(),\n          axis.text.y =element_text(face =\"bold\",\n                                    colour = \"#030202\"))\n```\n\n::: {.cell-output-display}\n![](Campeonato-Brasileiro_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nEm quais mêses, fez e tomou ,mais gols?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDadosAgg %>%  ggplot() +\n    \n    geom_col(aes(x = -GolsPro ,y =Mes), fill=\"#424d6b\") +\n\n     \n    geom_text(aes(x = -GolsPro ,y =Mes,label =GolsPro),\n            position = position_stack(vjust =0.5),\n            color =\"#ced2de\") +\n    \n    geom_col(aes(x = GolsContra,y =Mes), \n              fill=\"#806630\") +\n\n     \n    geom_text(aes(x =GolsContra ,y =Mes,label =GolsContra),\n            position = position_stack(vjust =0.5),\n            color=\"#030202\") +\n   annotate(\"text\",x = -50 ,y =2,label =\"Gols Pro\",\n            color =\"#424d6b\") +\n   annotate(\"text\",x = 50 ,y =2,label =\"Gols Contra\",\n            color =\"#806630\") +\n    \n    \n    labs(x = \"Gols\",y = \"Mês\", title = \"Total de Gols por Mês\",\n         subtitle = \"valores a partir de 2010\") +\n    theme(axis.text.x = element_blank(),\n          axis.ticks.x=element_blank(),\n          axis.text.y =element_text(face =\"bold\",\n                                    colour = \"#030202\"))\n```\n\n::: {.cell-output-display}\n![](Campeonato-Brasileiro_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\nQual o desempenho das últimas temporadas?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nano <- c(2011,2015,2017)\npontuacao <-\n  Timao %>% filter(!is.na(Pontos)) %>% \n  group_by(season) %>% \n  summarise(Pontos = sum(Pontos)) %>% \n  mutate(Titulo = ifelse(season %in% ano, \"Campeão\", \"Não Ganhou\")) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTexto <- paste(\n  strwrap(\"A temporada de 2022 ainda não foi concluída\",\n          20),\n  collapse = \"\\n\")\n\npath <-\"escudo1.jpg\"\nimg <- readJPEG(path,native = TRUE)\n\n\npontuacao %>% \n  ggplot() +\n    geom_line(aes(x = season, y = Pontos),size =1.4,colour =\"grey\") +\n    scale_x_continuous(breaks = c(2010:2022)) +\n    geom_point(aes(x = season, y = Pontos),size = 2,color=\"grey\") +\n    \n    geom_point(\n      aes(x = season,y=Pontos, color =Titulo, size= Titulo)) +\n    \n    scale_colour_manual(values = c(\"#0a0a0a\",\"#b3a6a6\")) +\n\n    scale_size_manual(values = c(3,2)) +\n    \n    geom_line(aes(x = c(2010:2022),y = mean(`Pontos`)),\n              linetype =2) +  \n  \n    labs(x =\"Temporada\",title = \"Desempenho do Clube\") +\n    \n    theme(axis.text.x = element_text(angle = 90)) +\n    \n    annotate(\"text\",x = 2011 ,y =60,size = 2,\n           label = \"Média\", fontface = \"bold\",colour = \"black\") +\n    annotate(\"text\",x = 2018 ,y =35,size = 4,\n           label = Texto, fontface = \"bold\",colour = \"red\") +\n    inset_element(p = img,\n                left = 1.00,\n                bottom = 0.65,\n                right = 1.35,\n                top = 1.15)\n```\n\n::: {.cell-output-display}\n![](Campeonato-Brasileiro_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n## Conclusão\n\nA biblioteca brasileirao é excelente . Foi possível extrair bastante informação. Ela fornece de forma simples os dados gerais sobre as partidas, infelizmente ela não trás informações como número de cartões, tempo de jogo sem interrupções, posse bola, e entre outras. Não é terra arrasada, pois outros dados de fontes distintas podem ser adicionados para complementar as análises.\n\n## Ver também\n\n-   [r - graph - gallery](https://r-graph-gallery.com/treemap.html)\n\n-   [Blog Curso -R](https://blog.curso-r.com/posts/2021-03-05-brasileirao-sem-torcida/)\n",
    "supporting": [
      "Campeonato-Brasileiro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "da926d06eeaddfb2c0980e06cebe9976",
  "result": {
    "markdown": "---\ntitle: \"Utilizando R para Modelagem\"\nauthor: \"Jorge Luiz Mendes\"\neditor: visual\ndate: \"2023-04-13\"\nimage: \"image.png\"\ndescription: \"Como utilizar a biblioteca deSolve para resolver EDO's \"\ncategories: [ODE,ggplot,deSolve]\nbibliography: references.bib\n---\n\n\n## Introdução\n\nNa ciência sempre seguimos o roteiro observar o fenômeno, teorizar sobre ocorrido, propor um modelo físico e testar a hipótese. Minha parte favorita é a área da modelagem, nela conseguimos estruturar o problema a ser resolvido dando para outros campos como a simulação e a otimização.\n\nNa engenharia química (e nas outras engenharias) temos que lidar com balanços para modelar diversos processos. Primeiro definimos o volume de controle que basicamente é nossa região de interesse de estudo, analisamos os equipamentos envolvidos e o que acontece na fronteira do volume do controle (taxas de material e/ou de energia que entrem ou que saiem).\n\nEm problemas numéricos temos que lidar com o custo computacional, ou seja, o tempo processamento do modelo. Quanto mais simplificado o modelo menor será o custo computacional, logo você deve ter sabedoria na escolha do modelo, nos algoritmos de resolução e da precisão necessária. A biblioteca [@deSolve] é uma ferramenta muito interessante para resolver as EDO's, EAD's e EDA.\n\n[![Destilação Binária](https://docplayer.com.br/docs-images/55/35928335/images/2-0.png){fig-align=\"center\"}](https://docplayer.com.br/docs-images/55/35928335/images/2-0.png)\n\nO destilador binário é um ótimo exemplo por que podemos analisar de muitas formas cada região/equipamento obtendo uma quantidade de equações que descrevem melhor o processo.\n\n## Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(deSolve)#pacote de resolução de EDO's\nlibrary(ggplot2)#gráficos\n```\n:::\n\n\n## Problemas\n\n***Tanque de Mistura***\n\nImagine que temos um tanque onde água e sal são misturado perfeitamente. Nele ocorre uma entrada e uma saída de material e gostariamos de analisar como a massa de sal se comporta ao longo do tempo.\n\n![](Capturar1.PNG){fig-alt=\"próprio autor\" fig-align=\"center\"}\n\n*Partindo da equação de balanço de massa podemos equacionar da seguinte forma*:\n\n$$\nE - S -r_j = A_c\n$$\n\nNosso problema não envolve reação química. Podemos escrever a equação na forma de taxa de vazão mássica. A taxa de acúmulo descreve se ocorre alguma variação de algum parâmetro ao longo do tempo e quanto é essa variação.\n\n$$\n \\frac{dm}{dt} =  M_{entrada} - M_{saída}\n$$\n\n$$\n \\frac{dm}{dt} = 0 ,\\  o \\ regime\\ é\\ estacionário, \\ se \\ não, \\ é\\ transiente   \n$$\n\nlembrando que a vazão mássica pode ser escrita em termos da vazão volumétrica e a concentração da massa:\n\n$$\nM = Q.C\n$$\n\n$$\n C = \\frac{m}{Vol}\n$$\n\nConstrução do modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTanque_Mistura_1 <- function(Time,State,Parametros){\n  with(as.list(c(State,Parametros)),{\n    \n    Entrada <- Qin*d\n    Saida <- (Ma*Qout)/V\n    dm = Entrada - Saida\n    return(list(c(dm)))\n  })\n  \n}\n```\n:::\n\n\nAgora podemos espeficar os parâmetros\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparametros <- c(Qin <- 25, #taxa de entrada L/min\n                d <- 0, #concentração de sal na entrada kg/L\n                Qout<- 25, #taxa de saída   L/min\n                V <- 1000) #volume do tanque em L\nyinicial <- c(Ma =20) # condição inicial em kg\ntimes <-seq(0,600) # min\nResultado <-ode(yinicial,times,Tanque_Mistura_1,parametros,method =\"bdf\")\n```\n:::\n\n\nA descrição visual do problema:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto <- paste(strwrap(\"Atingiu o estado estacionário\",10),collapse = '\\n')\nggplot() + \n  aes(x = Resultado[,\"time\"],y = Resultado[,\"Ma\"]) +\n  geom_line(color = \"#209799\") +\n  labs(y = \"Massa de Sal(Kg)\", x = \"Tempo(Min)\",title = \"Tanque de Mistura\",\n       subtitle = \"tanque Único\", caption = \"Mendes,Jorge L\") +\n  annotate(\"text\",y = 4,x =500,label = texto, colour = \"#209799\",\n           size = 4) +\n  \n  theme(plot.title = element_text(face = \"bold\"),\n        plot.subtitle = element_text(family = \"italic\")) \n```\n\n::: {.cell-output-display}\n![](R-para-Modelagem_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nO modelo se comportou como esperado. A vazão de entrada era só de água pura, ou seja, quantidade de sal era nula, logo a quantidade de sal no tanque tende a diminuir com o passar do tempo até atingir o regime estacionário.\n\nNesse segundo exemplo há um sistema com dois tanques com um refluxo.\n\n![](Capturar2.PNG){fig-alt=\"Próprio autor\" fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTanque_Mistura_2 <- function(Time,State,Parametros){\n  with(as.list(c(State,Parametros)),{\n    \n    dma <- F1*d -(Ma*F2)/V +(Mb*F3)/V\n    dmb <- (Ma*F3)/V - (Mb*F3)/V - (Mb*F4)/V\n    return(list(c(dma,dmb)))\n  })\n  \n}\n```\n:::\n\n\nAgora podemos espeficar os parâmetros:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparametros <- c(F1 <- 3, #taxa de entrada L/min\n                F2 <- 4,#taxa de entrada L/min\n                F3 <- 1,#taxa de entrada L/min\n                F4 <- 3, #taxa de entrada L/min\n                d <- 0., #concentração de sal na entrada kg/L\n               \n                V <- 1000) #volume do tanque em L\n\nyinicial <- c(Ma =25,Mb = 0) # condição inicial em kg\n\ntimes <-seq(0,1000) # min\n\nResultado <-ode(yinicial,times,Tanque_Mistura_2,parametros,method =\"bdf\")\n```\n:::\n\n\nA descrição visual do problema:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto <- paste(strwrap(\"Atingiu o estado estacionário\",10),collapse = '\\n')\n\nggplot() + \n  geom_line(aes(x = Resultado[,\"time\"],y = Resultado[,\"Ma\"],\n                color = \"Tanque A\")) +\n  geom_line(aes(x = Resultado[,\"time\"],y = Resultado[,\"Mb\"],\n                color = \"Tanque B\")) +\n  labs(y = \"Massa de Sal(Kg)\", x = \"Tempo(Min)\",title = \"Tanque de Mistura\",\n       subtitle = \"sistema de dois tanques\", caption = \"Mendes,Jorge L\",\n       color = \"Tanque\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  annotate(\"text\",y = 5,x =900,label = texto, colour = \"#141313\",\n           size = 4,face =\"bold\") +\n  \n  theme(plot.title = element_text(face = \"bold\"),\n        plot.subtitle = element_text(family = \"italic\")) \n```\n\n::: {.cell-output-display}\n![](R-para-Modelagem_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nNote que houve um breve aumento de sal no tanque B, pois a alimentação do tanque do B tem uma quantidade de sal diferente da alimentação do tanque A que possui uma concentração nula.\n\n## Extra\n\nO [deSolve](https://cran.r-project.org/web/packages/deSolve/deSolve.pdf) oferece diversos métodos para resolução de EDO's como o BDF, Runge-Kutta, adams e etc. Para aqueles que tenham interesse em resolver na mão chegando na equação uma das minhas abordagens favoritas para resolução de EDO é a transformada de laplace. Basta ter uma tabela das transformadas de laplace tornando a resolução mais fácil que o convencional.\n\n$$\nℒ\\left(\\{f(t)\\}\\right) = F(S)\n$$\n\nPodemos fazer uma visualização do processo utilizando uma representação por blocos com o mermaid que é uma ferramenta do quarto.\n\n\n```{mermaid}\nsequenceDiagram\n  participant EDO com condição inicial\n  participant Problema Algébrico\n  participant Solução Algébrica\n  participant Solução da EDO\n  EDO com condição inicial->> Problema Algébrico: Transformada de Laplace\n  Problema Algébrico->>Solução Algébrica: mais fácil\n  Solução Algébrica->>Solução da EDO: Transformada Inversa\n  EDO com condição inicial->> Solução da EDO: mais difícil\n  \n\n```\n",
    "supporting": [
      "R-para-Modelagem_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}